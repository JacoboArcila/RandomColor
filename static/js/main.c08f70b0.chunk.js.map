{"version":3,"sources":["Button.jsx","App.jsx","index.js"],"names":["Button","message","alert","onClick","this","props","fn","className","Component","App","state","colors","shuffle","bind","shuffledArray","sort","Math","random","setState","map","color","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAGqBA,E,4MAErBC,QAAU,kBAAMC,MAAM,wB,4CAElB,WACI,OACI,wBAAQC,QAAkC,oBAAlBC,KAAKC,MAAMC,GAAoBF,KAAKC,MAAMC,GAAMF,KAAKH,QAASM,UAAU,gBAAhG,4B,GANwBC,aCCfC,G,wDAEnB,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,OAAQ,CACN,MACA,OACA,SACA,QACA,SACA,UACA,QACA,SAIJ,EAAKC,QAAU,EAAKA,QAAQC,KAAb,gBAfH,E,2CAkBd,WACE,IAAMC,EAAgBV,KAAKM,MAAMC,OAAOI,MAAK,iBAAM,GAAMC,KAAKC,YAC9Db,KAAKc,SAAS,CAAEP,OAAQG,M,oBAG1B,WACE,OACE,sBAAKP,UAAU,YAAf,UACE,qBAAKA,UAAU,QAAf,SACGH,KAAKM,MAAMC,OAAOQ,KAAI,SAACC,GAAD,OACrB,qBAAiBb,UAAWa,EAA5B,SACGA,GADOA,QAKd,cAAC,EAAD,CAAQd,GAAIF,KAAKQ,iB,GAnCQJ,cCCjCa,IAASC,OACP,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.c08f70b0.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport \"./Random.css\"\r\n\r\nexport default class Button extends Component {\r\n    \r\nmessage = () => alert(\"PASAME UNA FUNCION!\")\r\n\r\n    render() {\r\n        return (\r\n            <button onClick={typeof this.props.fn === \"function\" ? this.props.fn  : this.message} className=\"glow-on-hover\">Get Random</button>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Button from \"./Button\";\r\nimport \"./App.css\";\r\n\r\nexport default class App extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      colors: [\r\n        \"RED\",\r\n        \"BLUE\",\r\n        \"YELLOW\",\r\n        \"GREEN\",\r\n        \"ORANGE\",\r\n        \"MAGENTA\",\r\n        \"BROWN\",\r\n        \"LIME\",\r\n      ],\r\n    };\r\n    \r\n    this.shuffle = this.shuffle.bind(this);\r\n  }\r\n\r\n  shuffle() {\r\n    const shuffledArray = this.state.colors.sort(() => 0.5 - Math.random());\r\n    this.setState({ colors: shuffledArray });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"panel\">\r\n          {this.state.colors.map((color) => (\r\n            <div key={color} className={color}>\r\n              {color}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <Button fn={this.shuffle} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App.jsx';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n   <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}